{"version":3,"sources":["components/Card.js","components/Form.js","App.js","index.js"],"names":["Card","profile","this","props","className","src","avatar_url","alt","name","company","location","React","Component","CardList","profiles","map","key","id","Form","useState","username","setUsername","handleSubmit","event","a","preventDefault","axios","get","resp","console","log","data","onSubmit","action","type","placeholder","value","onChange","target","required","App","addNewProfile","profileData","setState","prevState","state","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAgBMA,E,4JACF,WACI,IAAMC,EAAUC,KAAKC,MAErB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKJ,EAAQK,WAAYC,IAAI,cAAcH,UAAU,gBAC1D,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA6BH,EAAQO,KAAOP,EAAQO,KAAO,wCAC3D,qBAAKJ,UAAU,gBAAf,SAAgCH,EAAQQ,QAAUR,EAAQQ,QAAU,oDACpE,qBAAKL,UAAU,iBAAf,SAAiCH,EAAQS,SAAWT,EAAQS,SAAW,wC,GAVpEC,IAAMC,WAiBVC,EA9BE,SAACV,GAEd,IAAMW,EAAWX,EAAMW,SAASC,KAAI,SAAAd,GAChC,OAAO,wBAAC,EAAD,2BAAUA,GAAV,IAAmBe,IAAKf,EAAQgB,SAE3C,OACI,8BACKH,K,kDC0BEI,G,MA7BF,SAACf,GACV,MAAgCgB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAME,iBADW,SAEEC,IAAMC,IAAN,uCAA0CP,IAF5C,OAEXQ,EAFW,OAGjBC,QAAQC,IAAIF,EAAKG,MACjB5B,EAAM6B,SAASJ,EAAKG,MACpBV,EAAY,IALK,2CAAH,sDAQlB,OACI,uBAAMY,OAAO,GAAGD,SAAUV,EAA1B,UACI,uBACIY,KAAK,OACLC,YAAY,kBACZC,MAAOhB,EACPiB,SAlBU,SAACd,GACnBF,EAAYE,EAAMe,OAAOF,QAkBjBG,UAAQ,IAEZ,mDCKGC,G,wDA5BX,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IAOVsC,cAAgB,SAACC,GACb,EAAKC,UAAS,SAACC,GACX,MAAQ,CACJ9B,SAAS,GAAD,mBAAM8B,EAAU9B,UAAhB,CAA0B4B,SAR1C,EAAKG,MAAQ,CACT/B,SAAU,IAJC,E,0CAgBnB,WACI,OACA,sBAAKV,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,sCACA,mBAAG0C,KAAK,kCAAkC1C,UAAU,MAApD,6BACA,cAAC,EAAD,CAAM4B,SAAU9B,KAAKuC,gBACrB,cAAC,EAAD,CAAU3B,SAAUZ,KAAK2C,MAAM/B,kB,GAvBzBH,IAAMC,YCDxBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11b265bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst CardList = (props) => {\r\n\r\n    const profiles = props.profiles.map(profile => {\r\n        return <Card {...profile} key={profile.id}/>\r\n    })\r\n    return(\r\n        <div>\r\n            {profiles}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const profile = this.props;\r\n\r\n        return (\r\n        <div className=\"github-profile\">\r\n            <img src={profile.avatar_url} alt=\"profile img\" className=\"profile-img\"/>\r\n            <div className=\"info\">\r\n                <div className=\"name align\">{profile.name ? profile.name : \"Recent data exists not. Try another\"}</div>\r\n                <div className=\"company align\">{profile.company ? profile.company : \"Company name not updated. I no fit lie give you\"}</div>\r\n                <div className=\"location align\">{profile.location ? profile.location : \"Maybe on mars, who knows?\"}</div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardList","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Form.css\"\r\n\r\n\r\n\r\nconst Form = (props) => {\r\n    const [username, setUsername] = useState(\"\")\r\n\r\n    const changeHandler = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const resp = await axios.get(`https://api.github.com/users/${username}`);\r\n        console.log(resp.data);\r\n        props.onSubmit(resp.data);\r\n        setUsername(\"\")\r\n    }\r\n    \r\n    return (\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Github username\"\r\n                value={username}\r\n                onChange={changeHandler}\r\n                required\r\n            />\r\n            <button>Add Card</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport CardList from \"./components/Card\";\r\nimport Form from \"./components/Form\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            profiles: []\r\n        };\r\n    }\r\n\r\n    addNewProfile = (profileData) => {\r\n        this.setState((prevState) => {\r\n            return ({\r\n                profiles: [...prevState.profiles, profileData],\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"app\">\r\n            <div className=\"header\">Github Card Apps for Fun</div>\r\n            <a href=\"https://github.com/Muili-Kazeem\" className=\"dev\">Built by Kazeem</a>\r\n            <Form onSubmit={this.addNewProfile}/>\r\n            <CardList profiles={this.state.profiles}/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}